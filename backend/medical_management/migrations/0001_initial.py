# Generated by Django 5.1.7 on 2025-06-01 01:03

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("appointments", "0001_initial"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "observation_date_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Observation Date and Time",
                    ),
                ),
                (
                    "symptoms_observed",
                    models.TextField(blank=True, verbose_name="Symptoms Observed"),
                ),
                (
                    "vital_signs",
                    models.JSONField(
                        blank=True,
                        help_text="e.g., {'temperature': '37C', 'blood_pressure': '120/80', 'heart_rate': '70bpm'}",
                        null=True,
                        verbose_name="Vital Signs",
                    ),
                ),
                ("description", models.TextField(verbose_name="Detailed Observation")),
                (
                    "notes",
                    models.TextField(
                        blank=True, verbose_name="Additional Notes (Observation)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Record Created At"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Record Updated At"
                    ),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="observations_in_appointment",
                        to="appointments.appointment",
                        verbose_name="Associated Appointment (Optional)",
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="observations_in_record",
                        to="patients.medicalrecord",
                        verbose_name="Associated Medical Record (Optional)",
                    ),
                ),
                (
                    "observed_by",
                    models.ForeignKey(
                        limit_choices_to={"role__in": ["NURSE", "DOCTOR"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="observations_made",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Observed By (Nurse/Doctor)",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observations_logged",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Observation",
                "verbose_name_plural": "Observations",
                "ordering": ["-observation_date_time"],
                "indexes": [
                    models.Index(
                        fields=["patient", "observation_date_time"],
                        name="medical_man_patient_c7cb90_idx",
                    ),
                    models.Index(
                        fields=["observed_by", "observation_date_time"],
                        name="medical_man_observe_e3afd9_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "medication_name",
                    models.CharField(max_length=255, verbose_name="Medication Name"),
                ),
                ("dosage", models.CharField(max_length=100, verbose_name="Dosage")),
                (
                    "frequency",
                    models.CharField(
                        help_text="e.g., Twice a day, Every 6 hours",
                        max_length=100,
                        verbose_name="Frequency",
                    ),
                ),
                (
                    "duration_days",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Duration of the prescription in days, if applicable.",
                        null=True,
                        verbose_name="Duration (days)",
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        help_text="Specific instructions for the patient on how to take the medication.",
                        verbose_name="Instructions for Use",
                    ),
                ),
                (
                    "prescription_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Prescription Date",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the prescription is currently active. Can be set to False if discontinued.",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Record Created At"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Record Updated At"
                    ),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="prescriptions_from_appointment",
                        to="appointments.appointment",
                        verbose_name="Associated Appointment (Optional)",
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="prescriptions_in_record",
                        to="patients.medicalrecord",
                        verbose_name="Associated Medical Record (Optional)",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "prescribed_by",
                    models.ForeignKey(
                        limit_choices_to={"role": "DOCTOR"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="prescriptions_made",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Prescribed By (Doctor)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prescription",
                "verbose_name_plural": "Prescriptions",
                "ordering": ["-prescription_date", "medication_name"],
                "indexes": [
                    models.Index(
                        fields=["patient", "prescription_date"],
                        name="medical_man_patient_bd9515_idx",
                    ),
                    models.Index(
                        fields=["prescribed_by", "prescription_date"],
                        name="medical_man_prescri_c7dc4a_idx",
                    ),
                    models.Index(
                        fields=["is_active", "prescription_date"],
                        name="medical_man_is_acti_d0f625_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Treatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "treatment_name",
                    models.CharField(max_length=255, verbose_name="Treatment Name"),
                ),
                (
                    "treatment_date_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Treatment Date and Time",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="Description of Treatment"
                    ),
                ),
                (
                    "outcome",
                    models.TextField(
                        blank=True, verbose_name="Outcome/Result of Treatment"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, verbose_name="Additional Notes (Treatment)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Record Created At"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Record Updated At"
                    ),
                ),
                (
                    "administered_by",
                    models.ForeignKey(
                        limit_choices_to={"role__in": ["DOCTOR", "NURSE"]},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="treatments_administered",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Administered By (Doctor/Nurse)",
                    ),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="treatments_in_appointment",
                        to="appointments.appointment",
                        verbose_name="Associated Appointment (Optional)",
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="treatments_in_record",
                        to="patients.medicalrecord",
                        verbose_name="Associated Medical Record (Optional)",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="treatments_received",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Treatment",
                "verbose_name_plural": "Treatments",
                "ordering": ["-treatment_date_time"],
                "indexes": [
                    models.Index(
                        fields=["patient", "treatment_date_time"],
                        name="medical_man_patient_d5b9f2_idx",
                    ),
                    models.Index(
                        fields=["administered_by", "treatment_date_time"],
                        name="medical_man_adminis_e89ab7_idx",
                    ),
                ],
            },
        ),
    ]
